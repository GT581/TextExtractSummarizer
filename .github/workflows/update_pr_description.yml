name: Update PR Description with Commits

on:
  pull_request:
    types: [opened, edited, synchronize]
    branches:
      - main

jobs:
  update-description:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get PR commits and update description
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        REPO_NAME=${{ github.repository }}
        TOKEN=${{ secrets.GITHUB_TOKEN }}

        # Fetch all commits in the PR
        COMMITS=$(curl -s -H "Authorization: token $TOKEN" \
          "https://api.github.com/repos/$REPO_NAME/pulls/$PR_NUMBER/commits")
        
        # Check if we got any commits
        COMMIT_COUNT=$(echo "$COMMITS" | jq '. | length')
        if [ "$COMMIT_COUNT" -eq 0 ]; then
          echo "No commits found in this PR"
          DESCRIPTION="### No commits found in this PR"
        else
          # Initialize the PR description with proper markdown
          echo "### Commits Included:" > description.md
          echo "" >> description.md
          
          # Process each commit
          echo "$COMMITS" | jq -r '.[] | "\(.sha)|\(.commit.message)"' | while IFS='|' read -r SHA MESSAGE; do
            # Get first line of commit message as the title
            FIRST_LINE=$(echo "$MESSAGE" | head -n 1 | xargs)
            
            # Format with SHA and first line as main bullet
            echo "* **${SHA}**: ${FIRST_LINE}" >> description.md
            
            # Get rest of the message (if any) and format as sub-bullets
            REMAINING=$(echo "$MESSAGE" | tail -n +2 | grep -v "^$")
            if [ ! -z "$REMAINING" ]; then
              echo "$REMAINING" | while read -r LINE; do
                # Skip empty lines and trim whitespace
                LINE=$(echo "$LINE" | xargs)
                if [ -z "$LINE" ]; then
                  continue
                fi
                
                # Add as sub-bullet with proper indentation
                echo "  * $LINE" >> description.md
              done
            fi
            
            # Add a blank line between commits for better readability
            echo "" >> description.md
          done
          
          # Read the complete description
          DESCRIPTION=$(cat description.md)
          rm description.md
        fi
        
        # Update the PR body with the commit description
        # Properly escape the description for JSON
        ESCAPED_DESCRIPTION=$(echo "$DESCRIPTION" | jq -sR .)
        
        echo "Updating PR description with:"
        echo "$DESCRIPTION"
        
        curl -X PATCH -H "Authorization: token $TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\":$ESCAPED_DESCRIPTION}" \
          "https://api.github.com/repos/$REPO_NAME/pulls/$PR_NUMBER"
